@{
    ViewBag.Title = "Try‑It: TXT ➜ PDF";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>TXT ➜ PDF Try‑It</h2>

<div class="card p-3">
    <input type="file"
           id="fileInput"
           accept=".txt,text/plain"
           class="form-control" />
    <button id="uploadBtn" class="btn btn-primary mt-2">Upload &amp; Convert</button>

    <a id="downloadLink" class="btn btn-success mt-3 d-none" download="Generated.pdf">
        Download PDF
    </a>
    <div id="msg" class="mt-2 text-danger"></div>
</div>

<script>
    const fileInput = document.getElementById('fileInput');
    const btn       = document.getElementById('uploadBtn');
    const link      = document.getElementById('downloadLink');
    const msg       = document.getElementById('msg');

    btn.addEventListener('click', async () => {
        msg.textContent = '';
        link.classList.add('d-none');

        const file = fileInput.files[0];
        if (!file) { msg.textContent = 'Pick a file first.'; return; }

        if (file.type !== 'text/plain' && !file.name.endsWith('.txt')) {
            msg.textContent = 'Only .txt chunk files are accepted.';
            return;
        }


        const fd = new FormData();
        fd.append('file', file);

        btn.disabled = true; btn.textContent = 'Uploading…';
        try {
            const resp = await fetch('/api/pdf/convert-file', {
                method: 'POST',
                body: fd
            });
            if (!resp.ok) throw new Error(await resp.text());

            const blob = await resp.blob();
            const url  = URL.createObjectURL(blob);

            link.href = url;
            link.classList.remove('d-none');
        } catch (e) {
            msg.textContent = e.message;
        } finally {
            btn.disabled = false; btn.textContent = 'Upload & Convert';
        }
    });
</script>
